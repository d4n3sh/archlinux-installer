#!/usr/bin/env bash

# Pacstrap
pacstrap /mnt \
linux \
linux-headers \
base \
base-devel \
linux-firmware \
xfsprogs \
vim

# Setup fstab
genfstab -U /mnt >> /mnt/etc/fstab

# Copy install scripts to the chroot environment
if [[ -d /mnt/root ]]; then
  echo "Copying "$(pwd)" install scripts into the chroot environment."
  cp -r "$(pwd)" /mnt/root/
else
  echo "Failed to copy "$(dirname "$0")" install scripts into the chroot environment."
  exit 1
fi

# chroot
arch-chroot /mnt /root/archlinux-installer/2.install-base-system
# Set the time zone
ln -sf /usr/share/zoneinfo/America/Chicago /etc/localtime
ls -l /etc/localtime

# Set the system clock
hwclock --systohc
hwclock

# Set locale
sed -i 's/^#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen
cat /etc/locale.gen | grep -e 's/^en_US.UTF-8 UTF-8'
locale-gen

echo "LANG=en_US.UTF-8" > /etc/locale.conf
cat /etc/locale.conf

hostname="r2d2"
cat <<EOF > /etc/hostname
${hostname}
EOF

cat <<EOF > /etc/hosts
# Static table lookup for hostnames.
# See hosts(5) for details.
127.0.0.1	localhost
::1		localhost
127.0.1.1	r2d2.localdomain	r2d2
EOF

# Use the nearest mirrors
pacman -Sy reflector --noconfirm
reflector --country "US" --latest 15 --protocol https --sort rate --save /etc/pacman.d/mirrorlist

# Install Network Manager
pacman -S networkmanager --noconfirm
systemctl enable NetworkManager

# Install microcode
pacman -S intel-ucode --noconfirm

# Generate the initramfs
mkinitcpio -P

# Setup bootloader
pacman -S efibootmgr --noconfirm
bootctl install

cat <<EOF > /boot/loader/loader.conf
timeout 0
default arch
EOF

cat <<EOF > /boot/loader/entries/arch.conf
title Arch Linux
linux /vmlinuz-linux
initrd /intel-ucode.img
initrd /initramfs-linux.img
options root="PARTLABEL=OS" rw
EOF

# Set root passwd
passwd root
